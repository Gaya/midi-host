#!/usr/bin/env node
SETTINGS_PATH="/home/pi/midi.settings.json",(()=>{var t={3992:t=>{t.exports=function(t){const e=/^client (\d*): '(.*)' \[(.*)]\n(\s.+\n?)+/gm,n=[];let r;for(;r=e.exec(t);){const[t,e,o]=r,s=parseInt(e,10);if(0===s||o.indexOf("Through")>-1)continue;const c={name:o,id:s,ports:[]},i=/^\s+(\d+).+/gm;let a;for(;a=i.exec(t);){const[t,e]=a;c.ports.push(parseInt(e,10))}n.push(c)}return n}},6451:(t,e,n)=>{const r=n(7147),o=n(2037),{exec:s}=n(2081),c=process.env.SETTINGS_PATH||SETTINGS_PATH||`${o.homedir()}/midi.settings.json`;function i(t,e){const n=t[e.name];return void 0===n?1:n}t.exports={getDeviceSetting:i,canMidiIn:function(t,e){switch(i(t,e)){case 1:case 2:return!0;default:return!1}},canMidiOut:function(t,e){switch(i(t,e)){case 1:case 3:return!0;default:return!1}},loadSettings:function(){try{const t=r.readFileSync(c);return JSON.parse(t.toString())}catch(t){return console.info(`No settings file found at ${c}`),{}}},execCommand:function(t){return new Promise(((e,n)=>{s(t,((t,r,o)=>{t?n(t):o?n(`stderr: ${o}`):e(r)}))}))}}},2081:t=>{"use strict";t.exports=require("child_process")},7147:t=>{"use strict";t.exports=require("fs")},2037:t=>{"use strict";t.exports=require("os")}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,n),s.exports}(()=>{const t=n(3992),{loadSettings:e,canMidiIn:r,canMidiOut:o,execCommand:s}=n(6451);(async function(){await s("aconnect -x");const n=await s("aconnect -i -l").then(t),c=e();n.forEach((t=>{o(c,t)&&t.ports.forEach((e=>{n.filter((e=>e.id!==t.id)).forEach((n=>{r(c,n)&&n.ports.forEach((r=>{s(`aconnect ${t.id}:${e} ${n.id}:${r}`)}))}))}))}))})().then((()=>{console.log("Updated")})).catch((t=>{console.error(t)}))})()})();